#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - bdl (Batch Downloader)
# Started On        - Sat 16 Sep 22:34:12 BST 2017
# Last Change       - Sat  3 Feb 19:38:22 GMT 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

[ "$OSTYPE" == "linux-gnu" ] || XERR "$LINENO" "Unsupported platform."
[ $UID -eq 0 ] && XERR "$LINENO" "Root access is not required."

declare -i DEPCOUNT=0
for DEP in\
\
	/usr/bin/{wget,cut} /sbin/shutdown\
	/bin/{mv,systemctl,sleep,sync,mkdir}
{
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -gt 0 ] && exit 1

# Newer versions of wget by default request unwanted server-side compression.
read -a WGET_VERSION_LINE <<< "$(/usr/bin/wget --version)"
if [ 0${WGET_VERSION_LINE[2]//[!0-9]} -ge 01192 ]; then
	XERR "$LINENO" "Your version of wget is currently unsupported."
fi

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            BDL - BATCH DOWNLOADER (3rd February 2018)
		            Written by terminalforlife (terminalforlife@yahoo.com)

		            Easily and quickly download a batch of files using wget.

		SYNTAX:     bdl [OPTS]
		
		OPTS:       --help|-h|-?            - Displays this help information.
		            --debug|-D              - Enables the built-in bash debugging.
		            --insert|-I LINK        - Quickly append a link to the download list.
		            --dest|-d PATH          - Where PATH is the location to download.
		            --editor|-E CMD         - Where CMD is the command for your editor.
		            --suspend|-s            - Immediately suspend machine when finished.
		            --shutdown|-S           - Like above, but a shutdown after 1 minute.
		            --notify|-N             - Use notify-send to inform of bdl completion.
		            --edit|-e               - Change URL list with an available text editor.
		            --clear|-C              - Empty the bdl download list entirely.

		FILE:       All files are found in '\$HOME/.bdl'.

		TIP:        You can specify the destination for your downloads on a per-download
		            basis, all you need to do is append the destination path to the end of
		            the line with the direct download URL.

		            Those destination paths given (per the above tip) currently do not
		            support variables, such as the environment variables \$HOME and \$USER.
	EOF
}

MAIN_DIR="$HOME/.bdl"
LIST_EDITOR_FILE="$MAIN_DIR/editor.conf"
BDL_FILE="$MAIN_DIR/bdl_list.txt"

if ! [ -f "$LIST_EDITOR_FILE" -a -s "$LIST_EDITOR_FILE" ]; then
	XERR "$LINENO" "Please choose an editor. See --help for info."
else
	read LIST_EDITOR < "$LIST_EDITOR_FILE"
fi

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--debug|-D)
			DEBUG="true" ;;
		--insert|-I)
			shift

			INSERT="true"
			printf "%s\n" "$1" >> "$BDL_FILE" ;;
		--dest|-d)
			shift

			[ -d "$1" ] || {
				XERR "$LINENO" "Destination directory unavailable."
			} && DL_DIR="$1" ;;
		--editor|-E)
			shift

			printf "%s\n" "$1" > "$LIST_EDITOR_FILE"
			exit 0 ;;
		--edit|-e)
			if [ -x "$LIST_EDITOR" ]; then
				$LIST_EDITOR "$BDL_FILE" 2> /dev/null
				exit 0
			else
				XERR "$LINENO" "Unable to execute: $LIST_EDITOR"
			fi ;;
		--clear|-C)
			/bin/mv "$BDL_FILE"{,.old}
			exit 0 ;;
		--notify|-N)
			NOTIFY="true" ;;
		--suspend|-s)
			SUSPEND="true" ;;
		--shutdown|-S)
			SHUTDOWN="true" ;;
	esac

	shift
done

[ "$DEBUG" == "true" ] && set -xue

/bin/mkdir -p "$MAIN_DIR"
[ -f "$BDL_FILE" ] || > "$BDL_FILE"

INIT_MAIN(){
	while read -a X; do
		if ! [[ "${X[0]}" =~ ^#+ ]]; then
			WARGS="-qc --show-progress"

			if [ -z "${X[1]}" ]; then
				/usr/bin/wget $WARGS "${X[0]}" -O "./${X[0]//*\/}"
				/bin/sync "./${X[0]//*\/}"
			else
				#TODO - Make this a pure-shell approach.
				TARGET=`echo "${X[*]}" | /usr/bin/cut -d " " -f 2-`
				[ -f "$TARGET" ] || XERR "$LINENO" "Target is not a file."

				/usr/bin/wget $WARGS "${X[0]}" -O "$TARGET"
				/bin/sync "$TARGET"
			fi
		fi
	done < "$BDL_FILE"

	if [ "$NOTIFY" == "true" ]; then
		/usr/bin/notify-send "Downloading with bdl is completed."
	fi

	if [ "$SHUTDOWN" == "true" ]; then
		/usr/bin/notify-send "System shutdown in one minute."\
			-i warning -u critical

		/sbin/shutdown --no-wall +1
	elif [ "$SUSPEND" == "true" ]; then
		/usr/bin/notify-send "System will suspend in ten seconds."\
			-i warning -u critical

		/bin/sleep 10s
		/bin/systemctl suspend
	fi
}

[ "$INSERT" == "true" ] && exit 0
[ "$SHUTDOWN" == "true" ] && INIT_MAIN SHUTDOWN || INIT_MAIN
